{{- if and .Values.maintenance.enabled .Values.maintenance.backup.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ template "regatta.name" . }}
  labels:
    {{- include "regatta.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.maintenance.backup.schedule }}
  successfulJobsHistoryLimit: {{ .Values.maintenance.backup.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.maintenance.backup.failedJobsHistoryLimit }}
  jobTemplate:
    metadata:
      labels:
        {{- include "regatta.selectorLabels" . | nindent 8 }}
    spec:
      template:
        metadata:
          labels:
            {{- include "regatta.selectorLabels" . | nindent 12 }}
            {{- with .Values.additionalPodLabels }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        spec:
          {{- with .Values.podSecurityContext }}
          securityContext:
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          initContainers:
          - name: {{ template "regatta.name" . }}-load-backup
            image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
            imagePullPolicy: {{ .Values.image.imagePullPolicy }}
            args:
            - "backup"
            - "--address={{ template "regatta.name" . }}-api:{{ .Values.api.port }}"
            {{- if .Values.maintenance.token }}
            - "--token=$(TOKEN)"
            {{- end }}
            - "--ca=/api-cert/ca.crt"
            - "--dir=/backup"
            - "--json=true"
            resources:
              limits:
                cpu: '1'
                memory: 1Gi
              requests:
                cpu: 200m
                memory: 512Mi
            volumeMounts:
            - mountPath: /api-cert
              name: api-cert
            - mountPath: /backup
              name: backup
            {{- if .Values.maintenance.token }}
            env:
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "regatta.name" . }}-maintenance-token
                  key: token
            {{- end }}
          containers:
          - name: {{ template "regatta.name" . }}-store-backup
            image: {{ .Values.maintenance.backup.image.repository }}:{{ .Values.maintenance.backup.image.tag }}
            imagePullPolicy: {{ .Values.image.imagePullPolicy }}
            command:
            - /bin/sh
            - -c
            - >-
              CURR_DATE=$(date "+%y-%m-%d-%H-%M") && /s5cmd --json cp /backup/ {{ .Values.maintenance.backup.bucket }}/$CURR_DATE/
            resources:
              limits:
                cpu: '1'
                memory: 256Mi
              requests:
                cpu: 200m
                memory: 128Mi
            volumeMounts:
            - mountPath: /backup
              name: backup
          restartPolicy: OnFailure
          volumes:
          - name: backup
            {{- if .Values.maintenance.backup.workdir }}
            {{- .Values.maintenance.backup.workdir | default "emptyDir: {}" | toYaml | nindent 12 }}
            {{- else }}
            emptyDir: {}
            {{- end }}
          - name: api-cert
            secret:
              defaultMode: 420
              secretName: {{ template "regatta.name" . }}-api-cert
{{- end }}
